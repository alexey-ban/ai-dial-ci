name: Create Environment

on:
  workflow_call:
    inputs:
      environment_name:
        type: string
        description: "The name of the environment to manage"
        required: true
      environment_url:
        type: string
        description: "The environment URL"
      reviewer_id:
        type: number
        description: 'reviewer ID'
        required: false
        default: 20123880

jobs:
  create_environment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          lfs: true

      - name: Update environment reviewers and policies
        env:
          ADMIN_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
        run: |
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${ADMIN_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/environments/${{ inputs.environment_name }} \
            -d '{"wait_timer": 0,"prevent_self_review": false,"deployment_branch_policy": {"protected_branches": false,"custom_branch_policies": true},"reviewers": [{"type":"User","id":${{ inputs.reviewer_id }}}]}'

  check_permission:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment_name }}
      url: ${{ inputs.environment_url }}
    concurrency: ${{ inputs.environment_name }}
    needs: 
      - create_environment
    steps:
      - name: Check permission
        run: |
          DISPATCHED_REPO_NAME=${{ github.event.client_payload.github.payload.repository.name }}
          DISPATCHED_REPO_OWNER=${{ github.event.client_payload.github.payload.repository.owner.login }}
          ERROR_MESSAGE=""
          if [[ "$DISPATCHED_REPO_OWNER" != "$GITHUB_REPOSITORY_OWNER" ]]; then
          ERROR_MESSAGE="The event was not dispatched by a repository within the same owner."
          fi
          if [[ "$DISPATCHED_REPO_NAME" != ai-dial* ]]; then
          ERROR_MESSAGE+=" The repository name does not start with 'ai-dial'."
          fi
          if [[ -n "$ERROR_MESSAGE" ]]; then
            echo "status=$ERROR_MESSAGE" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "All checks passed."